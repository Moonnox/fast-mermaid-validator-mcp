apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: mmjc-dev
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 4096;   # Reduced for stability
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Performance settings for high concurrency
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        keepalive_requests 1000;
        client_max_body_size 100m;

        # Connection optimizations
        reset_timedout_connection on;
        client_body_timeout 60;
        client_header_timeout 60;
        send_timeout 60;

        # Connection pooling to backend
        upstream backend {
            keepalive 64;
            keepalive_requests 1000;
            keepalive_timeout 60s;
            server 127.0.0.1:8000 max_fails=0;
        }

        server {
            listen 80;
            server_name _;

            location / {
                proxy_pass http://backend;
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # High-performance timeouts
                proxy_connect_timeout 1s;
                proxy_send_timeout 300s;
                proxy_read_timeout 300s;
                proxy_buffering off;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mermaid-validator-api-nginx
  namespace: mmjc-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mermaid-validator-api-nginx
  template:
    metadata:
      labels:
        app: mermaid-validator-api-nginx
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
      - name: mermaid-app
        image: icr.io/mjc-cr/mjc-mermaid-validator:1.0.15-no-rate-limit-amd64
        ports:
        - containerPort: 8000
        env:
        - name: NODE_ENV
          value: "development"
        - name: LOG_LEVEL
          value: "debug"
        - name: MAX_CONNECTIONS
          value: "50000"
        - name: SERVER_TIMEOUT
          value: "600000"
        - name: KEEP_ALIVE_TIMEOUT
          value: "300000"
        - name: HEADERS_TIMEOUT
          value: "310000"
        - name: MAX_HEADERS_COUNT
          value: "8000"
        - name: MAX_REQUESTS_PER_SOCKET
          value: "1000000"
        - name: MAX_FILES
          value: "-1"
        - name: MAX_FILE_SIZE
          value: "-1"
        - name: MAX_DIAGRAM_CONTENT_LENGTH
          value: "-1"
        - name: MERMAID_MAX_TEXT_SIZE
          value: "-1"
        resources:
          requests:
            cpu: 500m      # Sufficient for mermaid processing
            memory: 1Gi    # Sufficient for large diagrams
          limits:
            cpu: 1000m     # Adequate processing power
            memory: 2Gi    # Adequate memory for complex validation
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      imagePullSecrets:
      - name: all-icr-io-mmjc
---
apiVersion: v1
kind: Service
metadata:
  name: mermaid-validator-api-nginx
  namespace: mmjc-dev
spec:
  selector:
    app: mermaid-validator-api-nginx
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP